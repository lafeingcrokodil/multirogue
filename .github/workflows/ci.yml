name: CI
on:
  push:
    branches:
      - '**'
env:
  PROJECT_ID: lafeingcrokodil-multirogue
  PROJECT_NUMBER: 185890686123
  REGION: europe-west1
  REGISTRY_HOSTNAME: europe-west1-docker.pkg.dev
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          workload_identity_provider: projects/${{env.PROJECT_NUMBER}}/locations/global/workloadIdentityPools/github/providers/github
          service_account: github-actions@${{env.PROJECT_ID}}.iam.gserviceaccount.com
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: stable
      - name: Lint
        uses: golangci/golangci-lint-action@v8
      - name: Test
        run: make test
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci
      - name: Compile TypeScript
        run: npx tsc
      - name: Configure Docker
        run: gcloud auth configure-docker "$REGISTRY_HOSTNAME" --quiet
      - name: Build Docker image
        run: |
          SHORT_SHA=${GITHUB_SHA::7}
          IMAGE="$REGISTRY_HOSTNAME/$PROJECT_ID/main/multirogue:$SHORT_SHA"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          docker build -t "$IMAGE" .
      - name: Push Docker image
        run: docker push "$IMAGE"
      - name: Deploy to staging
        run: |
          gcloud run deploy staging \
            --image="$IMAGE" \
            --region="$REGION" \
            --service-account="staging@$PROJECT_ID.iam.gserviceaccount.com" \
            --allow-unauthenticated
