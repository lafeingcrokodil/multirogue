// Package random contains logic related to randomly generating things.
package random

import (
	"errors"
	"math/rand/v2"
	"strconv"
	"strings"
)

// ErrInvalidDiceString is returned if the dice string doesn't have the format "0d0[+0d0+...]".
var ErrInvalidDiceString = errors.New("invalid dice string")

// RollDice returns a random number generated by rolling the specified dice.
// The dice are specified as a string with the format "0d0[+0d0+...]", where
// the 0s can be any positive integers or 0.
func RollDice(diceStr string) (int, error) {
	var result int

	allDice := strings.SplitSeq(diceStr, "+")

	for d := range allDice {
		dice := strings.Split(d, "d")
		if len(dice) != 2 { //nolint:mnd
			return 0, ErrInvalidDiceString
		}

		count, err := strconv.ParseInt(dice[0], 10, 0)
		if err != nil {
			return 0, err
		}

		sides, err := strconv.ParseInt(dice[1], 10, 0)
		if err != nil {
			return 0, err
		}

		result += int(count) * rand.IntN(int(sides))
	}

	return result, nil
}
